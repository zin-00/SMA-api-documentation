name: Comments
description: |-

  APIs for creating, updating, and deleting comments on posts.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/comments
    metadata:
      groupName: Comments
      groupDescription: |-

        APIs for creating, updating, and deleting comments on posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a comment to a post.'
      description: |-
        The authenticated user can comment on a post or reply to another comment.

        You **don’t need to send your user ID** — it’s automatically taken from your access token.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: 'The ID of the post to comment on.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      content:
        name: content
        description: 'The content of the comment.'
        required: true
        example: '"Nice post!"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_comment_id:
        name: parent_comment_id
        description: 'The ID of the parent comment if replying.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      post_id: 1
      content: '"Nice post!"'
      parent_comment_id: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Comment added",
           "comment": {
             "id": 10,
             "post_id": 1,
             "user_id": 2,
             "content": "Nice post!",
             "parent_comment_id": null
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/comments/{comment_id}'
    metadata:
      groupName: Comments
      groupDescription: |-

        APIs for creating, updating, and deleting comments on posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a comment.'
      description: 'Only the user who created the comment can update it.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment to update.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The updated content.'
        required: true
        example: '"Updated comment!"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      content: '"Updated comment!"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Comment updated",
           "comment": {
             "id": 10,
             "content": "Updated comment!"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/comments/{comment_id}'
    metadata:
      groupName: Comments
      groupDescription: |-

        APIs for creating, updating, and deleting comments on posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a comment.'
      description: 'Only the user who created the comment can delete it.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment to delete.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Comment deleted"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
