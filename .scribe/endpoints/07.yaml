name: Followers
description: |-

  APIs for following, unfollowing, and viewing followers.
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/follow/{user}'
    metadata:
      groupName: Followers
      groupDescription: |-

        APIs for following, unfollowing, and viewing followers.
      subgroup: ''
      subgroupDescription: ''
      title: 'Follow or unfollow another user.'
      description: |-
        This endpoint allows the **authenticated user** to follow or unfollow another user.
        You **do not need to send your own user ID** — it’s automatically detected from your token.

        **Behavior:**
        - If you are not yet following the target user → it will follow them.
        - If you are already following the target user → it will unfollow them.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The ID of the user you want to follow or unfollow.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      user: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Followed"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
           "message": "Unfollowed"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "message": "You cannot follow yourself"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/followers
    metadata:
      groupName: Followers
      groupDescription: |-

        APIs for following, unfollowing, and viewing followers.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all followers of the authenticated user.'
      description: 'Returns a list of users who are following you.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           {
               "id": 3,
               "name": "John Doe",
               "email": "john@example.com"
           }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/following
    metadata:
      groupName: Followers
      groupDescription: |-

        APIs for following, unfollowing, and viewing followers.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all users that the authenticated user is following.'
      description: 'Returns a list of users that **you** follow.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           {
               "id": 5,
               "name": "Jane Smith",
               "email": "jane@example.com"
           }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
