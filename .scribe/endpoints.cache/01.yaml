## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: |-

  APIs for user registration and login
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user registration and login
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's name."
        required: true
        example: '"Jane Doe"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email."
        required: true
        example: '"jane@example.com"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password. Minimum 6 characters."
        required: true
        example: '"secret123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Jane Doe"'
      email: '"jane@example.com"'
      password: '"secret123"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "message": "User registered successfully",
           "user": {
               "id": 1,
               "name": "Jane Doe",
               "email": "jane@example.com",
               "created_at": "2025-10-20T00:00:00.000000Z",
               "updated_at": "2025-10-20T00:00:00.000000Z"
           },
           "token": "1|abcdefghijklmnopqrstuvwxyz0123456789"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "message": "The given data was invalid.",
           "errors": {
               "email": ["The email has already been taken."]
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user registration and login
      subgroup: ''
      subgroupDescription: ''
      title: 'Log in an existing user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email."
        required: true
        example: '"jane@example.com"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: '"secret123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: '"jane@example.com"'
      password: '"secret123"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Login successful",
           "user": {
               "id": 1,
               "name": "Jane Doe",
               "email": "jane@example.com",
               "created_at": "2025-10-20T00:00:00.000000Z",
               "updated_at": "2025-10-20T00:00:00.000000Z"
           },
           "token": "1|abcdefghijklmnopqrstuvwxyz0123456789"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
           "message": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user registration and login
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user (revoke token)'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Logged out successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
