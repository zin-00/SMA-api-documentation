## Autogenerated by Scribe. DO NOT MODIFY.

name: Friends
description: |-

  APIs for managing friendships
endpoints:
  -
    httpMethods:
      - GET
    uri: api/friends
    metadata:
      groupName: Friends
      groupDescription: |-

        APIs for managing friendships
      subgroup: ''
      subgroupDescription: ''
      title: 'List all accepted friends.'
      description: 'Returns all users that the authenticated user is friends with (status: accepted).'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           {
             "id": 1,
             "user_id": 3,
             "friend_id": 2,
             "status": "accepted",
             "friend": {
                 "id": 2,
                 "name": "Jane Doe"
             }
           }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/friends/pending
    metadata:
      groupName: Friends
      groupDescription: |-

        APIs for managing friendships
      subgroup: ''
      subgroupDescription: ''
      title: 'List pending friend requests sent by the authenticated user.'
      description: 'Returns all friend requests the authenticated user has sent that are still pending.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           {
             "id": 6,
             "user_id": 1,
             "friend_id": 2,
             "status": "pending",
             "friend": {
                 "id": 2,
                 "name": "Jane Doe"
             }
           }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/friends/requests
    metadata:
      groupName: Friends
      groupDescription: |-

        APIs for managing friendships
      subgroup: ''
      subgroupDescription: ''
      title: 'List incoming friend requests.'
      description: |-
        Returns all friend requests where the authenticated user is the recipient
        and the status is "pending".
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           {
             "id": 5,
             "user_id": 2,
             "friend_id": 1,
             "status": "pending",
             "created_at": "2025-10-20T05:00:00.000000Z",
             "sender": {
                 "id": 2,
                 "name": "Jane Doe"
             }
           }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/friends/send
    metadata:
      groupName: Friends
      groupDescription: |-

        APIs for managing friendships
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a friend request.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      friend_id:
        name: friend_id
        description: 'The ID of the user to send a request to.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      friend_id: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Friend request sent"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/friends/accept
    metadata:
      groupName: Friends
      groupDescription: |-

        APIs for managing friendships
      subgroup: ''
      subgroupDescription: ''
      title: 'Accept a friend request.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      request_id:
        name: request_id
        description: 'The ID of the friend request.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      request_id: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Friend request accepted"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/friends/unfriend
    metadata:
      groupName: Friends
      groupDescription: |-

        APIs for managing friendships
      subgroup: ''
      subgroupDescription: ''
      title: 'Unfriend a user.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      friend_id:
        name: friend_id
        description: 'The ID of the user to unfriend.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      friend_id: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Unfriended successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/friends/block
    metadata:
      groupName: Friends
      groupDescription: |-

        APIs for managing friendships
      subgroup: ''
      subgroupDescription: ''
      title: 'Block a user.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      friend_id:
        name: friend_id
        description: 'The ID of the user to block.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      friend_id: 4
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "User blocked"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/friends/restrict
    metadata:
      groupName: Friends
      groupDescription: |-

        APIs for managing friendships
      subgroup: ''
      subgroupDescription: ''
      title: 'Restrict a user.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      friend_id:
        name: friend_id
        description: 'The ID of the user to restrict.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      friend_id: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "User restricted"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
