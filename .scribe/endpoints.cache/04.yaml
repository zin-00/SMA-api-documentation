## Autogenerated by Scribe. DO NOT MODIFY.

name: Posts
description: |-

  APIs for managing user posts
endpoints:
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for managing user posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Display all posts.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           {
             "id": 1,
             "content": "Hello world",
             "image_url": null,
             "video_url": null,
             "privacy": "public",
             "user": {"id":1, "name":"Jane Doe"},
             "comments": []
           }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for managing user posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new post.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The post text.'
        required: false
        example: '"New post"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image_url:
        name: image_url
        description: 'The post image URL.'
        required: false
        example: '"https://example.com/image.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      video_url:
        name: video_url
        description: 'The post video URL.'
        required: false
        example: '"https://example.com/video.mp4"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      privacy:
        name: privacy
        description: 'The privacy level (public/friends/private).'
        required: false
        example: '"public"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      content: '"New post"'
      image_url: '"https://example.com/image.jpg"'
      video_url: '"https://example.com/video.mp4"'
      privacy: '"public"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Post created successfully",
           "post": {
             "id": 10,
             "content": "New post",
             "image_url": "https://example.com/image.jpg",
             "video_url": null,
             "privacy": "public",
             "user_id": 1
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "message": "The given data was invalid.",
           "errors": {
             "privacy": ["The selected privacy is invalid."]
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for managing user posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific post.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "content": "Hello world",
           "user": {"id":1, "name":"Jane Doe"},
           "comments": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for managing user posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a post.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The post text.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_url:
        name: image_url
        description: 'The post image URL.'
        required: false
        example: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      video_url:
        name: video_url
        description: 'The post video URL.'
        required: false
        example: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      privacy:
        name: privacy
        description: 'The privacy level (public/friends/private).'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      content: consequatur
      image_url: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
      video_url: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
      privacy: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Post updated",
           "post": { "id": 1, "content": "Updated content" }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for managing user posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a post.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Post deleted"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
